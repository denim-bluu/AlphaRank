name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request: {}

jobs:
  lint-format-typing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set up Python
        uses: astral-sh/setup-uv@v3
        with:
          python-version: "3.12"

      - name: Cache UV dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          uv pip install ruff mypy
          uv sync --all-extras --dev

      - name: Run ruff check
        run: uv run ruff check --output-format=github .

      - name: Run ruff format
        run: uv run ruff format --check .

      - name: Run type checking
        run: uv run mypy src/ tests/

  test:
    name: test py${{ matrix.python }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ["3.12"]

    env:
      PYTHON: ${{ matrix.python }}
      OS: ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set up Python
        uses: astral-sh/setup-uv@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Cache UV dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-py${{ matrix.python }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-py${{ matrix.python }}-

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run pytest tests/